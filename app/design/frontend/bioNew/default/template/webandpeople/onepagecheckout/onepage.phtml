<div class="shoppingbagContainer">
   <ul class="shoppingBag">
      <li><a href="<?php echo Mage::getUrl("checkout/cart"); ?>"><span class="sCircle">1</span><span class="shoppingText">Shopping Bag</span></a></li>
	  <li><span class="sCircle  active">2</span><span class="shoppingText  activeText">Onepage checkout </span></li>
	<!--  <li><span class="sCircle">2</span><span class="shoppingText">Billing & Shipping Address </span></li>
      <li><span class="sCircle">3</span><span class="shoppingText">Payment Details </span></li>-->
      <li><span class="sCircle">3</span><span class="shoppingText">Place  Order</span></li>
   </ul>
   <span class="shoppingShadow"></span>
</div>

<div class="layout">
<div class="shoppingdetailsArea">
<div class="page-title" style="margin-top:15px; overflow: hidden;">
<div class="pressTop">
    <h2 style="text-align:center"><?php echo $this->__('One Step checkout') ?></h2>
	</div>
</div>

<script type="text/javascript">countryRegions = <?php echo $this->helper('directory')->getRegionJson() ?></script>

<?php echo $this->getChildHtml('layout'); ?>

<script type="text/javascript">
//<![CDATA[
    Translator.add('Please choose to register or to checkout as a guest', "<?php echo $this->__('Please choose to register or to checkout as a guest'); ?>");
    Translator.add('Checkout', "<?php echo $this->__('Checkout'); ?>");
    Translator.add('Your order cannot be completed at this time as there is no shipping methods available for it. Please make necessary changes in your shipping address.', "<?php echo $this->__('Your order cannot be completed at this time as there is no shipping methods available for it. Please make necessary changes in your shipping address.'); ?>");
    Translator.add('Please specify shipping method.', "<?php echo $this->__('Please specify shipping method.'); ?>");
    Translator.add('Your order cannot be completed at this time as there is no payment methods available for it.', "<?php echo $this->__('Your order cannot be completed at this time as there is no payment methods available for it.'); ?>");
    Translator.add('Please specify payment method.', "<?php echo $this->__('Please specify payment method.'); ?>");

    var checkout = new Checkout({
        saveMethod: '<?php echo $this->getUrl('checkout/onepage/saveMethod') ?>',
        failure: '<?php echo $this->getUrl('checkout/cart') ?>'}
    );

    if ($('billing-address-select')) $('billing-address-select').observe('change', bindUpdateBillingMethods);
    if ($('billing:country_id')) $('billing:country_id').observe('change', bindUpdateBillingMethods);
    if ($('billing:region_id')) $('billing:region_id').observe('change', bindUpdateBillingMethods);
    if ($('billing:city')) $('billing:city').observe('change', bindUpdateBillingMethods);
    if ($('billing:postcode')) $('billing:postcode').observe('change', bindUpdateBillingMethods);
    if ($('billing:use_for_shipping')) $('billing:use_for_shipping').observe('click', bindUpdateShippingMethods);

    if ($('shipping-address-select')) $('shipping-address-select').observe('change', bindUpdateShippingMethods);
    if ($('shipping:country_id')) $('shipping:country_id').observe('change', bindUpdateShippingMethods);
    if ($('shipping:region_id')) $('shipping:region_id').observe('change', bindUpdateShippingMethods);
    if ($('shipping:city')) $('shipping:city').observe('change', bindUpdateShippingMethods);
    if ($('shipping:postcode')) $('shipping:postcode').observe('change', bindUpdateShippingMethods);
    if ($('shipping:same_as_billing')) $('shipping:same_as_billing').observe('click', bindUpdateShippingMethods);

    var winLogin = null;
    var loginHtml = <?php echo Mage::helper('core')->jsonEncode($this->getChildHtml('login')); ?>;

    function popupLogin()
    {
        if (!winLogin) {
            winLogin = new OnePageCheckoutPopup({
                id: 'popup-login-form',
                html: loginHtml,
                title: '<?php echo $this->__('Customer Login') ?>'
            });
        } else {
            winLogin.open();
        }
    }

    function includingShipping(getShippingCode)
    {
        if (typeof shippingMe != 'undefined') {
            var newPrice = shippingMe[getShippingCode];
            var quoteBaseGrandTotal = 0;
            if (typeof lastPrice == 'undefined') {
                lastPrice = newPrice;
                quoteBaseGrandTotal += newPrice;
            }
            if (newPrice != lastPrice) {
                quoteBaseGrandTotal += (newPrice-lastPrice);
                lastPrice = newPrice;
            }
        }
        checkQuoteBaseGrandTotal = quoteBaseGrandTotal;
        updateTotalView();
        return false;
    }

    function wpAfterUpdatePayment()
    {
        var needUpdated = <?php echo (int)Mage::helper('onepagecheckout')->getConfigParam('general/update_total_after_payment'); ?>;
        if (needUpdated) updateTotalView();
        return false;
    }

    function setDiscount(isRemove)
    {
        if (isRemove) {
            $('coupon_code').removeClassName('required-entry');
            $('remove-coupone').value = "1";
        } else {
            $('coupon_code').addClassName('required-entry');
            $('remove-coupone').value = "0";
        }

        var validator = new Validation('discount-coupon-form');
        if (!validator.validate()) return;

        var url = '<?php echo $this->getUrl('checkout/onepage/ajaxUpdate', array('type' => 'discount_coupon')) ?>';
        checkout.updateInfo(url);
    }

    function bindUpdateBillingMethods()
    {
        var url = '<?php echo $this->getUrl('checkout/onepage/ajaxUpdate', array('type' => 'all_methods')) ?>';
        checkout.updateInfo(url);
    }

    function bindUpdateShippingMethods()
    {
        var url = '<?php echo $this->getUrl('checkout/onepage/ajaxUpdate', array('type' => 'all_methods')) ?>';
        checkout.updateInfo(url);
    }

    function updateTotalView()
    {
        var url = '<?php echo $this->getUrl('checkout/onepage/ajaxUpdate', array('type' => 'all_methods')) ?>';
        checkout.updateInfo(url);
    }

    function toggleShipping(isChecked)
    {
        if (isChecked) {
            $('shipping:same_as_billing').checked = true;
            $('checkoutSteps').addClassName('shipping_as_billing');
            Element.hide('opc-shipping');
        } else {
            $('shipping:same_as_billing').checked = false;
            $('checkoutSteps').removeClassName('shipping_as_billing');
            wpClearShippingForm();
            Element.show('opc-shipping');
        }
    }

    function wpClearShippingForm()
    {
        var needClearShippingForm = <?php echo (int)Mage::helper('onepagecheckout')->getConfigParam('layout/clear_different_shipping'); ?>;
        if (!needClearShippingForm) return;

        var lst = $('co-shipping-form').getElements();
        lst.each(function(item) {
            if (item.type == 'hidden') return;
            if (item.hasClassName('skip-clear')) return;
            item.clear()
        });
    }

    function toggleRegister(isChecked)
    {
        if (isChecked) {
            checkout.method = 'register';
            new Ajax.Request(
                checkout.saveMethodUrl,
                {method: 'post', onFailure: checkout.ajaxFailure.bind(checkout), parameters: {method:'register'}}
            );
            if ($('login:register')) $('login:register').checked = true;
            if ($('register-customer-password')) Element.show('register-customer-password');
        } else {
            checkout.method = 'guest';
            new Ajax.Request(
                checkout.saveMethodUrl,
                {method: 'post', onFailure: checkout.ajaxFailure.bind(checkout), parameters: {method:'guest'}}
            );
            if ($('login:register')) $('login:register').checked = false;
            if ($('register-customer-password')) Element.hide('register-customer-password');
        }
    }

    <?php if (!$this->getQuote()->isAllowedGuestCheckout() || Mage::getStoreConfigFlag('onepage_checkout/general/create_account_checked')): ?>
    toggleRegister(true);
    <?php else : ?>
    toggleRegister(false);
    <?php endif; ?>

    payment.initWhatIsCvvListeners();

    updateTotalView();
//]]>
</script>
<?php echo $this->getChildHtml('custom_javascript'); ?>
</div>
</div>